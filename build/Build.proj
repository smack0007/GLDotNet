<Project DefaultTargets="Build">
  <PropertyGroup>
    <UseGitVersion>true</UseGitVersion>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />
  
  <!--
  Clean
  -->
  
  <Target Name="Clean">
    <Exec
      Command="dotnet clean GLDotNet.sln"
      WorkingDirectory="$(RepositoryRootDirectory)" />
  </Target>
  
  <!--
  Build
  -->
  
  <PropertyGroup>
    <BuildArgs>-c Release -p:UseGitVersion=true</BuildArgs>
  </PropertyGroup>
  
  <Target Name="Build" DependsOnTargets="BuildSolution;PackLibrary" />
  
  <Target Name="BuildSolution">
    <Exec
      Command="dotnet build GLDotNet.sln $(BuildArgs)"
      WorkingDirectory="$(RepositoryRootDirectory)" />
  </Target>

  <Target Name="PackLibrary">
    <Exec
      Command="dotnet pack GLDotNet.csproj $(BuildArgs)"
      WorkingDirectory="$(RepositoryRootDirectory)src/GLDotNet/" />
    
    <Copy
      Condition="$(ArtifactStagingDirectory) != ''"
      SourceFiles="@(Artifacts)"
      DestinationFolder="$(ArtifactStagingDirectory)" />
  </Target>

  <!--
  Release
  -->
  
  <Target Name="Release" DependsOnTargets="Clean;Build;EnsureNoChanges;PushNuGet;CalculateGitVersions;TagRepository" />

  <Target Name="EnsureNoChanges">
    <Exec Command="git status -s" ConsoleToMSBuild="true" StandardOutputImportance="Low" ContinueOnError="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitStatus" />
    </Exec>

    <Error
      Condition="$(GitStatus) != ''"
      Text="There are currently uncommitted changes." />
  </Target>
  
  <Target Name="PushNuGet">
    <ItemGroup>
      <Packages Include="$(RepositoryRootDirectory)bin/**/*.nupkg" />
    </ItemGroup>

    <!--<Exec
      Command="dotnet nuget push %(Packages.Identity) -s https://api.nuget.org/v3/index.json"
      WorkingDirectory="$(RepositoryRootDirectory)" />-->
  </Target>
  
  <Target Name="TagRepository">
    <Exec
      Command="git tag -a v$(GitVersion) -m &quot;Version $(GitVersion)&quot;"
      WorkingDirectory="$(RepositoryRootDirectory)" />
  </Target>
</Project>
